<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get the high score list

// This calls the script to pull the high score list from the database. 
// The argument is the size of the list to pull - 10 in this example.

gsGet_List(10);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Build High Score Table

/*This calls the script to recieve the respose from the server and build the
high score list, the argument is the number of records to expect */
if list == async_load[? "id"] // check the id of the returned value
    {
        if (async_load[? "status"] &gt;=0)
        {
        gsGet_List_Result(10);
        }
        }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw High Score Table
//draw a congratulations message

draw_text(200,20,"Great Job!###Your score of " + string(global.uscore) + " is on the wall of fame!.");

// Draw a simple high score table. Obviousely could be much prettier.
draw_text(100,100,"High Scores:##")
/* The ds_list with the scores is stored as

name
score
name 
score

Remember it starts at 0, so EVEN lines are the player names, ODD lines ares the player scores. */

skip = 120 // This is the starting Y location of the table, and will be used to incriment the space between lines
for (a=0; a&lt;20 a+=2;) //&lt;&lt; Notice we are incrimenting by 2 to only get the EVEN lines
{
    skip+=20; //The spacing bwtween lines
    draw_text(100,skip,ds_list_find_value(name_list,a)); //Loop through all the EVEN indexes for the names only
}

skip2 = 120
for (b=1; b&lt;20 b+=2;) //&lt;&lt; Notice we start on 1 and incriment by 2 to get only ODD lines.
{
    skip2+=20;
    draw_text(200,skip2,ds_list_find_value(name_list,b)); //Loop through all the ODD indexes for the scores only.
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
