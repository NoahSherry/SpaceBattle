<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Configuration Script
// Some global variables and settings to hold information for the game
/* If you are looking for congiuration options for specific object try searching that object in the manual, I have tried to 
include each objects configuration options on its manual page */

global.rowcount = 0; // Counts how many rows in the database, for debug really. 
global.msg = 0; // Will be used to display in game messages.

// Scrolling list settings added by jackhigh24 - dont change!
global.lista = 0;
global.listb = 1;
global.listc = 0;
global.listd = 0;
global.liste = 0;

settings[0] = "gameSync.ini"  //Name of INI files used to store login data.
settings[1] = 'null'  //Not used atm
settings[2] = 'null' // Not used atm
settings[3] = 14; // Default alarm time for async events waiting on return
settings[3,1] = 20; // Timeout for attempting to load data - should be a higher value than settings[3]!
settings[4] = "Noob" //Default username asigned until player enters it.
settings[5] = rmEndGame; // Room to go to if you didnt get a high score on game end.
settings[6] = rmEndGame; // Room to go to after you have submitted a high score.
settings[7] = 30; //alarm delay before displaying table after insert, sometimes this takes longer than average so it has its own setting.
settings[8] = 5; // Score table type to use. 1 = plain, 2 = colored text, 3 = colored cells, 4 = image for bg, 5 = scrollable.
settings[9] = 0; // Hide high score if one is not available yet
settings[10] = 0; // Hide Rank if player does not have one yet
settings[11] = 0; //The players score.
settings[12] = 1; //Cache table for offline use - 1 yes 0 no. This will store a local copy of the most recently received high score table for display if player is offline.
settings[13] = rm_menu; // Room to go to from the no internet room.
settings[14] = rmFail; // Room to go to if you dont have an internet connection (where you would load a cached table)
settings[15] = 1; //Which insert method to use? 0=Single 1=Multiple | Single insert once score per ID, Multiple no limit per ID.
settings[16] = 10; // Number of rows to pull for high score table

// Table Drawing Settings

table[0] = 200;  //X Location to draw table 
table[1] = 120; // Y Location to draw table
table[2] = 200; // Space in pixels between table columns (name and score columns)
table[3] = 20; // Space in pixels between table rows. 
table[3,1] = 1; //Table row labels on or off - 1 is on 0 is off
table[3,2] = 32; // spacing between nubers and name

/* Use this section for non mono spaced sprite fonts to adjust for font/sprite width 
Single digit numbers will use table[3,2] - 4,5 and 6 subtract from 2 on 2,3 and 4 digit 
numbers to move the label left.
*/
table[3,3] = 0; // adjust labels - use if labels overlap names 
table[3,4] = 14;  // adjust amount for 10-99 - only works if 3,3 = 1
table[3,5] = 20;  // adjust amount for 100-999 - only works if 3,3 = 1
table[3,6] = 30; // adjust amount for 1000-9999 - only works if 3,3 = 1

/*  Use these settings for scrolling tables - added by jackhigh24  */

table[3,7] = 1; //Turn on scrolling for table - only works on type 5 - 1=on 2=off
table[3,8] = 20; //Number of rows to display at once x2 - so for 10 rows set to 20, for 15 set ro 30 etc.
table[3,9] = 512; // X location to create up button 
table[3,10] = 96;  // Y location to create up button
table[3,11] = 512; // X location to create down button  
table[3,12] = 256; // Y location to create down button
table[3,13] = 1; //Draw UP/DOWN Arrows, if 1 arrows will be shown, of 0 they will not

// For Colored font table (2) or colored cells table (3)
// If you use table (2) these are the font colors, per line. If You use table (3) these are the cell or outline colors, 4 = use image
table[4] = c_teal;
table[5] = c_teal;
table[6] = c_yellow;
table[7] = c_yellow;
table[8] = c_green;
table[9] = c_green;
table[10] = c_purple;
table[11] = c_purple;
table[12] = c_red;
table[13] = c_red;

//Table 3 adjustments
//cloumn 1 (name) adjustments - table 1 can span both
//The table background rectangles will start drawing at the same x,y of your table text, these settings will allow you to adjust it for a cleaner look.
table[14] = -2; // Starting x offset adjustment
table[15] = -2;   // starting y offset adjustment
table[16] = 198; // width of rectangle
table[17] = 16;  //Height of rectangle
table[18] = 0; // Solid or outline. 1 for Outline, 0 for solid. 
//column 2 (Score) adjustments
table[19] = 1; // Use second column? 1 for yes, 0 for no. You can stretch the first rectangle to encompass both if you want.
table[20] = 1; // Solid or outline. 1 for Outline, 0 for solid. 
table[21] = -2; // Starting x offset adjustment
table[22] = -2;   // starting y offset adjustment
table[23] = 40; // width of rectangle
table[24] = 16;  //Height of rectangle
//Use these to give your cells a colored outline when using a solid fill - turn off if using outline above as this will overide it.
//Column 1
table[25] = 1; // Turn outline on or off. 1 is on, 0 is off
table[26] = c_black; // outline color
//Column 2
table[27] = 0; // Turn outline on or off. 1 is on, 0 is off
table[28] = c_black; //Outline color.

//Table 4 adjustemts
table[29] = 0; //X placement adjustment on image
table[30] = 0; //Y Placement adjustment on image
table[32] = sprTableBack; // The sprite to use for the backbround.

// Language Settings -----------------------
Lang[0] = "Rows in database: ";  //Text for 
Lang[1] = "User ID = "; // Text preceding user ID number, empty string ("") for nothing.
Lang[2] = "You got a high score! What is your username?"; // Popup login box text for username
Lang[3] = ""; //Default name in popup login box for username
Lang[4] = "Score: "; //Label for drawing score
Lang[5] = "High Score: "; // Label for drawing high score
Lang[6] = "N/A"; // Text for when a high score is not available yet
Lang[7] = "Leaderboard Ranking: "; //Lable for overall leaderboard rank
Lang[8] = "N/A"; // Text for when a leaderboard ranking is not available yet
Lang[9] = ""; // Label for username
Lang[10] = "Leaderboard High Score: "; // Lable for global highest score on leaderboard
Lang[11] = "Score: "; //Lable for score
Lang[12] = "You got a new high score!"; // Message for when player gets a high score!
Lang[13] = "You did not get a high score."; // Message for when player does not get a high score.
Lang[14] = "N/A"; // Message for when a global leaderboard high score is not available
Lang[15,0] = "You seem to be offline so we can't determine your ranking!#Press SPACE to try again or press ENTER to continue.";  //Message for user when they are offline.
Lang[15,1] = 80; // X placement of offline message on the screen
Lang[15,2] = 40; // Y Placement of offline message on the screen
Lang[16,0] = "Recent High Scores*"; //Offline table header Label
Lang[16,1] = 240; // X location of header message 
Lang[16,2] = 100; // Y Location of header message 
Lang[17,0] = "*Data has been cached from last time you were online so may#be out of date." // Cached table footer - disclaimer
Lang[17,1] = 10; // cached Table footer X location
Lang[17,2] = 420; // cached table footer Y location

// Font settings --------------------
/* You may want to use a different font for certain sections, this will allow you to set 
Fonts on an individual basis per section. */

font[0,0] = -1;        //Default Font to use -1 uses system deafault font
font[0,1] =  c_black;   // Default font color font Color
font[0,2] = c_red;      // Default font color for error messages
font[0,3] = font_add_sprite(sprFont_DM,ord(" "),true,2); // The sprite to use for the font, comment out if not used. 
// objRowCount Settings
font[1,0] = font[0,0];   //  Row count font name
font[1,1] = font[0,2];  //   Row Count Font color
// objDraw_ID Settings
font[2,0] = font[0,0];   // Font name
font[2,1] = font[0,1];   //Font Color
// objDrawUsername Settings
font[3,0] = font[0,3]; // Font name
font[3,1] = c_blue;   //Font Color
// objDrawHighScore settings
font[4,0] = font[0,0]; // Font name
font[4,1] = font[0,1];   //Font Color
// objDrawRank Settings
font[5,0] = font[0,0]; // Font name
font[5,1] = font[0,1];   //Font Color
// objDraeHighScoreGlobal settings
font[6,0] = font[0,0]; // Font name
font[6,1] = font[0,1];   //Font Color
// objDrawScore Settings
font[7,0] = font[0,0]; // Font name
font[7,1] = font[0,1];   //Font Color
font[8,0] = font[0,0];  // Font used for drawing table
font[8,1] = c_black; // Font used for table font color EXCEPT style 2 as it has line by line color options above





/* This will check if an INI file exists that holds the players username and user ID. If it does it will open it
and pull those in. If not, then it will create a user ID for the player and write that to INI file for future reference,
as well as assign the defaule guest name  until the user enters their name. */


if (file_exists(settings[0]))
    {
    ini_open(settings[0])
    global.uid = ini_read_real('players','uid',0);
    global.uname = ini_read_string('players','uname',noone);
    ini_close()
    }
else
    {
    randomize();
    global.uid = gsCreate_ID(9); // Generate a unique user ID for the player.
    global.uname = settings[4]; //Variable to hold username once its loaded, or Guest for someone not logged in.
    ini_open(settings[0])
    ini_write_real('players','uid',real(global.uid));
    ini_write_string('players','uname',string(settings[4]));
    if (settings[12] == 1) {  //Create a default table to use before we can cache a real one
    ini_write_string('HighScores','Row0','jackhigh24')
    ini_write_string('HighScores','Row1','4210')
    ini_write_string('HighScores','Row2','Mark O')
    ini_write_string('HighScores','Row3','4120')
    ini_write_string('HighScores','Row4','Russel')
    ini_write_string('HighScores','Row5','3610')
    ini_write_string('HighScores','Row6','Taurus Media')
    ini_write_string('HighScores','Row7','3210')
    ini_write_string('HighScores','Row8','Fred')
    ini_write_string('HighScores','Row9','3100')
    ini_write_string('HighScores','Row10','Mike')
    ini_write_string('HighScores','Row11','2601')
    ini_write_string('HighScores','Row12','Yourself')
    ini_write_string('HighScores','Row13','2210')
    ini_write_string('HighScores','Row14','Nocturne')
    ini_write_string('HighScores','Row15','1108')
    ini_write_string('HighScores','Row16','NPT')
    ini_write_string('HighScores','Row17','1012')
    ini_write_string('HighScores','Row18','Yal')
    ini_write_string('HighScores','Row19','980')
    }
    ini_close()
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
